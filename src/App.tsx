import JSZip from 'jszip'
import './App.css'
import { useRef, useState } from 'react'

const comprovante = "";

function App() {
  const [fileName, setFileName] = useState("");

  const fileInputRef = useRef<HTMLInputElement>(null);

  function handleClick() {
    if (fileInputRef.current) {
      fileInputRef.current.click();
    }
  }

  async function handleFileChange(e: React.ChangeEvent<HTMLInputElement>) {
    let content: Blob | null = null;
    try {
      content = await createZip(e.target.files);
    } catch (e) {
      console.log(e);
      return;
    }

    if (content == null) {
      return;
    }
    downloadFile(fileName, content);
  }

  async function handleTesteEstresse() {

    let content: Blob | null = null;

    const zip = new JSZip();
    const comprovanteUint8Array = base64ToUint8Array(comprovante);
    for (let file = 0; file < 100; file++) {
      zip.file(`comprovante-${file}.pdf`, comprovanteUint8Array);
    }

    try {
      content = await zip.generateAsync({ type: "blob" })
    } catch (e) {
      console.log(e);
      return;
    }

    if (content == null) {
      return;
    }
    downloadFile(fileName, content);
  }

  return (
    <>
      <a href="https://www.autbank.com.br" target="_blank">
        <img src="https://64.media.tumblr.com/7fe17a2114366bb31935477a8f187198/55a4ea3232e65b55-13/s540x810/4711a0b251dc691be6a4d7919d6adeb73b23aee1.png" className="logo" alt="Vite logo" />
      </a>
      <div style={{ display: 'flex', flexDirection: 'column', rowGap: 10 }}>
        <div style={{ display: 'flex', columnGap: 10 }}>
          <input
            multiple
            type="file"
            name="file"
            onChange={handleFileChange}
            style={{ display: 'none' }}
            ref={fileInputRef}
          />
          <button onClick={handleClick}>
            Criar arquivo compactado
          </button>
          <button onClick={handleTesteEstresse}>
            Teste de estresse
          </button>
        </div>
        <input
          placeholder='Nome do arquivo'
          value={fileName}
          onChange={e => {
            setFileName(e.target.value);
          }}
        />
      </div>
    </>
  )
}

async function createZip(files: FileList | null) {
  if (!files) {
    return null;
  }

  const zip = new JSZip();
  for (let file = 0; file < files.length; file++) {
    zip.file(files[file].name, files[file]);
  }

  const content = await zip.generateAsync({ type: "blob" })
  return content;
}

function downloadFile(fileName: string, content: Blob) {
  // Create blob link to download
  const url = window.URL.createObjectURL(
    new Blob([content]),
  );
  const link = document.createElement('a');
  link.href = url;
  link.setAttribute(
    'download',
    `${fileName}.zip`,
  );

  // Append to html link element page
  document.body.appendChild(link);

  // Start download
  link.click();

  // Clean up and remove the link
  if (link.parentNode) {
    link.parentNode.removeChild(link);
  }
}

function base64ToUint8Array(base64: string) {
  return Uint8Array.from(atob(base64), c => c.charCodeAt(0));
}

export default App
